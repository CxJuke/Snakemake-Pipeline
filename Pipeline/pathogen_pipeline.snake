from os.path import basename
from os.path import join
from glob import glob

configfile: "config.yaml"

index_dir = join(config["workdir"], "index/")
pathogen_index = join(index_dir, "pathogen/")
human_index = join(index_dir, "human/")
sam_dir = join(config["workdir"], "sam_output/")
tmp = join(config["workdir"], "tmp/")
unmapped_dir = join(config["workdir"], "Unmapped/")
 
rule all:
    input:
        directory(pathogen_index)
        directory(human_index)

rule bowtie_index:
    input:
        pathogen_fa = config["pathogen_fasta"],
        human_fa = config["human_fasta"]
    output:
        pathogen_index = directory(pathogen_index),
        human_index = directory(human_index)
    message: "indexing genome & pathogen with bowtie2"
    shell:
        """
        bowtie2-build {input.pathogen_fa} {output.pathogen_index}
        bowtie2-build {input.human_fa} {output.human_index}  
        """

basenames = [basename(x).split("_R1")[0] for x in glob(config["sample_dir"] + "*R1*.fastq")]

rule bowtie_to_human:
    input:
        human_index = directory(human_index)
        r1 = expand('{sample}_R1.fastq', sample = basenames)
        r2 = expand('{sample}_R2.fastq', sample = basenames)
    output:
        unmapped = expand('{unmapped}{sample}.fastq', sample = basenames, unmapped = unmapped_dir)
        sam = temp(expand('{sam_dir}{sample}.sam', sample = basenames, sam_dir = sam_dir))
    shell:
        "bowtie2 -x {input.human_index} -1 {input.r1} -2 {input.r2} --un-conc {output.unmapped} -S {output.sam} --no-unal --no-hd --no-sq -p "12"

